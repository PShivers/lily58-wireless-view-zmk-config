/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&kp CAPS>;
            key-positions = <36 49>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        canary {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                        &kp N6  &kp N7    &kp N8     &kp N8   &kp N9    &kp DEL
&kp TAB    &kp W   &kp L   &kp Y     &kp P     &kp B                         &kp Z   &kp F     &kp O      &kp U    &kp SEMI  &trans
&kp BSPC   &kp C   &kp R   &kp S     &kp T     &kp G                         &kp M   &kp N     &kp E      &kp I    &kp A     &kp SQT
&kp LSHFT  &kp B   &kp J   &kp V     &kp D     &kp K   &kp DEL      &trans   &kp X   &kp H     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LGUI  &kp LALT  &mo 1   &kp SPACE    &kp RET  &mo 2   &kp HOME  &kp END
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        fn_num {
            bindings = <
&trans  &trans  &trans   &trans   &trans   &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans                    &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans                    &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans    &trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
                         &trans   &trans   &mo 1   &trans    &trans  &kp N0  &trans  &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans        &trans        &trans     &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LBKT      &kp RBKT      &kp MINUS  &kp SEMI    &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LS(LPAR)  &kp LS(RPAR)  &kp EQUAL  &kp LS(GT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LS(LBRC)  &kp LS(RBRC)  &kp DOT    &kp BSLH    &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans        &trans
            >;
        };

        movement {
            bindings = <
&trans  &trans             &trans            &trans          &trans             &trans                                 &trans        &trans     &trans      &trans     &trans         &trans
&trans  &trans             &mmv MOVE_Y(100)  &mmv MOVE_UP    &mmv MOVE_Y(-100)  &trans                                 &trans        &kp PG_UP  &kp UP      &kp PG_DN  &trans         &trans
&trans  &mmv MOVE_X(-100)  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &mmv MOVE_X(100)                       &kp LC(LEFT)  &kp LEFT   &kp DOWN    &kp RIGHT  &kp LC(RIGHT)  &trans
&trans  &trans             &trans            &mkp MB4        &mkp MB5           &trans            &trans       &trans  &trans        &kp HOME   &kp INSERT  &kp END    &trans         &trans
                                             &trans          &mkp MCLK          &mkp RCLK         &mkp LCLK    &trans  &trans        &trans     &trans
            >;
        };
    };
};
